% Funci√≥n para calcular el gradiente en cada punto
function grad = calculo_gradiente(u, n)
    grad = zeros(size(u)); % Inicializar el gradiente

    % Para k = 0
    delta_next = u(2) - u(1);
    inc_next = u(1) + u(2);
    grad(1) = (1 / (2 * n)) * ( ...
        sqrt(1 + n^2 * delta_next^2) - ...
        n^2 * delta_next * inc_next / sqrt(1 + n^2 * delta_next^2) ...
    );

    % Para k = 1, ..., n-1
    for k = 2:n
        delta_prev = u(k) - u(k-1);
        delta_next = u(k+1) - u(k);
        inc_prev = u(k-1) + u(k);
        inc_next = u(k) + u(k+1);

        grad(k) = (1 / (2 * n)) * ( ...
            n^2 * delta_prev * inc_prev / sqrt(1 + n^2 * delta_prev^2) + ...
            sqrt(1 + n^2 * delta_prev^2) + ...
            sqrt(1 + n^2 * delta_next^2) - ...
            n^2 * delta_next * inc_next / sqrt(1 + n^2 * delta_next^2) ...
        );
    end

    % Para k = n
    delta_prev = u(n+1) - u(n);
    inc_prev = u(n) + u(n+1);
    grad(n+1) = (1 / (2 * n)) * ( ...
        n^2 * delta_prev * inc_prev / sqrt(1 + n^2 * delta_prev^2) + ...
        sqrt(1 + n^2 * delta_prev^2) ...
    );
end