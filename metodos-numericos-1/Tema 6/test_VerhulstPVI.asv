clear all; close all;

%% Método ODE %%
% Discretizamos la variable
a = 0; b = 2; N = 30;
h = (b - a)/N;
td = a:h:b;

% Condición inicial
ya = 10;

% Resolución
[t_ode, y_ode] = ode23('VerhulstPVI', td, ya);

% Representación
plot(t_ode, y_ode, 'o-')
hold on

%% Método Euler %%
N_euler = [2, 4, 8, 16, 32, 64];
E = zeros(length(N_euler), 1);
for i = 1:length(N_euler)
    [t_euler, y_euler] = Euler('VerhulstPVI', a, b, N_euler(i), ya);
    plot(t_euler, y_euler, 'o-')

    % Cálculo de errores
    sol =3*10./(0.1*10 + (3 - 0.1*10).*exp(-3*t_euler)); % solución teórica.
    E(i) = max(abs(sol - y_euler));
end

orden = log2(E(1:end-1)./E(2:end));






